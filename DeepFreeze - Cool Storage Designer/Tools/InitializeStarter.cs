using DeepFreeze___Cool_Storage_Designer.Context;
using DeepFreeze___Cool_Storage_Designer.Entities;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DeepFreeze___Cool_Storage_Designer.Tools
{
	public static class InitializeStarter
	{

		public static void CreateCities(DeepFreezeContext context)
		{
			Cities city1 = new Cities() { Name = "Adana", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 26 };
			Cities city2 = new Cities() { Name = "Adıyaman", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 22 };
			Cities city3 = new Cities() { Name = "Afyon", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 21 };
			Cities city4 = new Cities() { Name = "Ağrı", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 25 };
			Cities city5 = new Cities() { Name = "Amasya", KuruTermometreSicaklik = 31, YasTermometreSicaklik = 21 };
			Cities city6 = new Cities() { Name = "Ankara", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 21 };
			Cities city7 = new Cities() { Name = "Antalya", KuruTermometreSicaklik = 39, YasTermometreSicaklik = 28 };
			Cities city8 = new Cities() { Name = "Artvin", KuruTermometreSicaklik = 30, YasTermometreSicaklik = 26 };
			Cities city9 = new Cities() { Name = "Aydın", KuruTermometreSicaklik = 39, YasTermometreSicaklik = 26 };
			Cities city10 = new Cities() { Name = "Balıkesir", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 27 };
			Cities city11 = new Cities() { Name = "Bilecik", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 23 };
			Cities city12 = new Cities() { Name = "Bingöl", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 21 };
			Cities city13 = new Cities() { Name = "Bitlis", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 22 };
			Cities city14 = new Cities() { Name = "Bolu", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 24 };
			Cities city15 = new Cities() { Name = "Burdur", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 21 };
			Cities city16 = new Cities() { Name = "Bursa", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 25 };
			Cities city17 = new Cities() { Name = "Çanakkale", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 25 };
			Cities city18 = new Cities() { Name = "Çankırı", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 25 };
			Cities city19 = new Cities() { Name = "Çorum", KuruTermometreSicaklik = 29, YasTermometreSicaklik = 19 };
			Cities city20 = new Cities() { Name = "Denizli", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 24 };
			Cities city21 = new Cities() { Name = "Diyarbakır", KuruTermometreSicaklik = 42, YasTermometreSicaklik = 23 };
			Cities city22 = new Cities() { Name = "Edirne", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 25 };
			Cities city23 = new Cities() { Name = "Elazığ", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 21 };
			Cities city24 = new Cities() { Name = "Erzincan", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 22 };
			Cities city25 = new Cities() { Name = "Erzurum", KuruTermometreSicaklik = 31, YasTermometreSicaklik = 23 };
			Cities city26 = new Cities() { Name = "Eskişehir", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 24 };
			Cities city27 = new Cities() { Name = "Gaziantep", KuruTermometreSicaklik = 39, YasTermometreSicaklik = 23 };
			Cities city28 = new Cities() { Name = "Giresun", KuruTermometreSicaklik = 29, YasTermometreSicaklik = 25 };
			Cities city29 = new Cities() { Name = "Gümüşhane", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 23 };
			Cities city30 = new Cities() { Name = "Hakkari", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 20 };
			Cities city31 = new Cities() { Name = "Hatay (Antakya)", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 28 };
			Cities city32 = new Cities() { Name = "Hatay (İskenderun)", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 29 };
			Cities city33 = new Cities() { Name = "Isparta", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 21 };
			Cities city34 = new Cities() { Name = "Mersin (İçel)", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 29 };
			Cities city35 = new Cities() { Name = "Mersin (Tarsus)", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 28 };
			Cities city36 = new Cities() { Name = "İstanbul", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 24 };
			Cities city37 = new Cities() { Name = "İzmir", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 25 };
			Cities city38 = new Cities() { Name = "Kars", KuruTermometreSicaklik = 30, YasTermometreSicaklik = 20 };
			Cities city39 = new Cities() { Name = "Kastamonu", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 22 };
			Cities city40 = new Cities() { Name = "Kayseri", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 23 };
			Cities city41 = new Cities() { Name = "Kırklareli", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 25 };
			Cities city42 = new Cities() { Name = "Kırşehir", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 21 };
			Cities city43 = new Cities() { Name = "Kocaeli (İzmit)", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 25 };
			Cities city44 = new Cities() { Name = "Konya", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 22 };
			Cities city45 = new Cities() { Name = "Kütahya", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 21 };
			Cities city46 = new Cities() { Name = "Malatya", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 21 };
			Cities city47 = new Cities() { Name = "Manisa", KuruTermometreSicaklik = 40, YasTermometreSicaklik = 26 };
			Cities city48 = new Cities() { Name = "Kahramanmaraş", KuruTermometreSicaklik = 36, YasTermometreSicaklik = 22 };
			Cities city49 = new Cities() { Name = "Mardin", KuruTermometreSicaklik = 38, YasTermometreSicaklik = 23 };
			Cities city50 = new Cities() { Name = "Muğla", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 22 };
			Cities city51 = new Cities() { Name = "Muş", KuruTermometreSicaklik = 32, YasTermometreSicaklik = 20 };
			Cities city52 = new Cities() { Name = "Nevşehir", KuruTermometreSicaklik = 28, YasTermometreSicaklik = 17 };
			Cities city53 = new Cities() { Name = "Niğde", KuruTermometreSicaklik = 34, YasTermometreSicaklik = 20 };
			Cities city54 = new Cities() { Name = "Ordu", KuruTermometreSicaklik = 30, YasTermometreSicaklik = 22 };
			Cities city55 = new Cities() { Name = "Rize", KuruTermometreSicaklik = 30, YasTermometreSicaklik = 26 };
			Cities city56 = new Cities() { Name = "Sakarya (Adapazarı)", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 25 };
			Cities city57 = new Cities() { Name = "Samsun", KuruTermometreSicaklik = 32, YasTermometreSicaklik = 25 };
			Cities city58 = new Cities() { Name = "Siirt", KuruTermometreSicaklik = 40, YasTermometreSicaklik = 23 };
			Cities city59 = new Cities() { Name = "Sinop", KuruTermometreSicaklik = 30, YasTermometreSicaklik = 25 };
			Cities city60 = new Cities() { Name = "Sivas", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 20 };
			Cities city61 = new Cities() { Name = "Tekirdağ", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 25 };
			Cities city62 = new Cities() { Name = "Tokat", KuruTermometreSicaklik = 29, YasTermometreSicaklik = 20 };
			Cities city63 = new Cities() { Name = "Trabzon", KuruTermometreSicaklik = 31, YasTermometreSicaklik = 25 };
			Cities city64 = new Cities() { Name = "Tunceli", KuruTermometreSicaklik = 37, YasTermometreSicaklik = 22 };
			Cities city65 = new Cities() { Name = "Şanlıurfa", KuruTermometreSicaklik = 43, YasTermometreSicaklik = 24 };
			Cities city66 = new Cities() { Name = "Uşak", KuruTermometreSicaklik = 35, YasTermometreSicaklik = 22 };
			Cities city67 = new Cities() { Name = "Van", KuruTermometreSicaklik = 33, YasTermometreSicaklik = 21 };
			Cities city68 = new Cities() { Name = "Yozgat", KuruTermometreSicaklik = 32, YasTermometreSicaklik = 20 };
			Cities city69 = new Cities() { Name = "Zonguldak", KuruTermometreSicaklik = 32, YasTermometreSicaklik = 25 };

			context.Cities.Add(city1);
			context.Cities.Add(city2);
			context.Cities.Add(city3);
			context.Cities.Add(city4);
			context.Cities.Add(city5);
			context.Cities.Add(city6);
			context.Cities.Add(city7);
			context.Cities.Add(city8);
			context.Cities.Add(city9);
			context.Cities.Add(city10);
			context.Cities.Add(city11);
			context.Cities.Add(city12);
			context.Cities.Add(city13);
			context.Cities.Add(city14);
			context.Cities.Add(city15);
			context.Cities.Add(city16);
			context.Cities.Add(city17);
			context.Cities.Add(city18);
			context.Cities.Add(city19);
			context.Cities.Add(city20);
			context.Cities.Add(city21);
			context.Cities.Add(city22);
			context.Cities.Add(city23);
			context.Cities.Add(city24);
			context.Cities.Add(city25);
			context.Cities.Add(city26);
			context.Cities.Add(city27);
			context.Cities.Add(city28);
			context.Cities.Add(city29);
			context.Cities.Add(city30);
			context.Cities.Add(city31);
			context.Cities.Add(city32);
			context.Cities.Add(city33);
			context.Cities.Add(city34);
			context.Cities.Add(city35);
			context.Cities.Add(city36);
			context.Cities.Add(city37);
			context.Cities.Add(city38);
			context.Cities.Add(city39);
			context.Cities.Add(city40);
			context.Cities.Add(city41);
			context.Cities.Add(city42);
			context.Cities.Add(city43);
			context.Cities.Add(city44);
			context.Cities.Add(city45);
			context.Cities.Add(city46);
			context.Cities.Add(city47);
			context.Cities.Add(city48);
			context.Cities.Add(city49);
			context.Cities.Add(city50);
			context.Cities.Add(city51);
			context.Cities.Add(city52);
			context.Cities.Add(city53);
			context.Cities.Add(city54);
			context.Cities.Add(city55);
			context.Cities.Add(city56);
			context.Cities.Add(city57);
			context.Cities.Add(city58);
			context.Cities.Add(city59);
			context.Cities.Add(city60);
			context.Cities.Add(city61);
			context.Cities.Add(city62);
			context.Cities.Add(city63);
			context.Cities.Add(city64);
			context.Cities.Add(city65);
			context.Cities.Add(city66);
			context.Cities.Add(city67);
			context.Cities.Add(city68);
			context.Cities.Add(city69);
			context.SaveChanges();
		}
		public static List<Material> CreateMaterials()
		{

			List<Material> materials = new List<Material>();
			Material material1 = new Material() { ID = 1, MaterialName = "Slica Aerogel", IsiIletimKatsayisi = 0.018m, HatchBrushStyle = HatchStyle.Percent40, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material2 = new Material() { ID = 2, MaterialName = "Poliuretan", IsiIletimKatsayisi = 0.020m, HatchBrushStyle = HatchStyle.DottedDiamond, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material3 = new Material() { ID = 3, MaterialName = "Camyünü", IsiIletimKatsayisi = 0.035m, HatchBrushStyle = HatchStyle.DashedHorizontal, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material4 = new Material() { ID = 4, MaterialName = "Sytropor", IsiIletimKatsayisi = 0.035m, HatchBrushStyle = HatchStyle.LargeConfetti, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material5 = new Material() { ID = 5, MaterialName = "Mantar", IsiIletimKatsayisi = 0.035m, HatchBrushStyle = HatchStyle.SmallConfetti, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material6 = new Material() { ID = 6, MaterialName = "Ruberoit", IsiIletimKatsayisi = 0.12m, HatchBrushStyle = HatchStyle.Percent90, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material7 = new Material() { ID = 7, MaterialName = "Kereste-Yumuşak(Çam,Ladin,Köknar,Ihlamur,Sunta)", IsiIletimKatsayisi = 0.12m, HatchBrushStyle = HatchStyle.DarkVertical, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material8 = new Material() { ID = 8, MaterialName = "Kereste-Sert(Gürgen,Dişbudak,Ceviz,Kayın)", IsiIletimKatsayisi = 0.15m, HatchBrushStyle = HatchStyle.DarkVertical, HatcBrushColor = "Firebrick", PenColorCode = "Firebrick", PenThickness = 1 };
			Material material9 = new Material() { ID = 9, MaterialName = "Bitüm veya Katranlı Kenaviçe", IsiIletimKatsayisi = 0.15m, HatchBrushStyle = HatchStyle.DarkHorizontal, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material10 = new Material() { ID = 10, MaterialName = "Briket-Dolu-Hafif-Betondan γ = 800 Kg/ m³", IsiIletimKatsayisi = 0.35m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material11 = new Material() { ID = 11, MaterialName = "Briket-Dolu-Hafif-Betondan γ = 1200 Kg/ m³", IsiIletimKatsayisi = 0.45m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Red", PenColorCode = "Red", PenThickness = 1 };
			Material material12 = new Material() { ID = 12, MaterialName = "Briket-Dolu-Hafif-Betondan γ = 1600 Kg/ m³", IsiIletimKatsayisi = 0.68m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Green", PenColorCode = "Green", PenThickness = 1 };
			Material material13 = new Material() { ID = 13, MaterialName = "Briket-Delikli-Hafif-Agrea γ = 1000 Kg/ m³", IsiIletimKatsayisi = 0.50m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Gray", PenColorCode = "Gray", PenThickness = 1 };
			Material material14 = new Material() { ID = 14, MaterialName = "Briket-Delikli-Hafif-Agrea γ = 140 Kg/ m³", IsiIletimKatsayisi = 0.60m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Brown", PenColorCode = "Brown", PenThickness = 1 };
			Material material15 = new Material() { ID = 15, MaterialName = "Briket-Delikli-Hafif-Agrea Üç Sıra Boşluklu", IsiIletimKatsayisi = 0.48m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "BlueViolet", PenColorCode = "BlueViolet", PenThickness = 1 };
			Material material16 = new Material() { ID = 16, MaterialName = "Tuğla-Delikli γ = 1000 Kg / m³", IsiIletimKatsayisi = 0.40m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Blue", PenColorCode = "Blue", PenThickness = 1 };
			Material material17 = new Material() { ID = 17, MaterialName = "Tuğla-Delikli γ = 1200 Kg / m³", IsiIletimKatsayisi = 0.45m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Red", PenColorCode = "Red", PenThickness = 1 };
			Material material18 = new Material() { ID = 18, MaterialName = "Tuğla-Delikli γ = 1400 Kg / m³", IsiIletimKatsayisi = 0.52m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Green", PenColorCode = "Green", PenThickness = 1 };
			Material material19 = new Material() { ID = 19, MaterialName = "Tuğla-Delikli-Hafif γ = 1200 Kg / m³", IsiIletimKatsayisi = 0.45m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material20 = new Material() { ID = 20, MaterialName = "Briket-Dolu-Curuftan-Sert", IsiIletimKatsayisi = 0.75m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Cyan", PenColorCode = "Cyan", PenThickness = 1 };
			Material material21 = new Material() { ID = 21, MaterialName = "Briket-Dolu-Kum ve Kireç Harç", IsiIletimKatsayisi = 0.90m, HatchBrushStyle = HatchStyle.HorizontalBrick, HatcBrushColor = "Purple", PenColorCode = "Purple", PenThickness = 1 };
			Material material22 = new Material() { ID = 22, MaterialName = "Kireç Harç", IsiIletimKatsayisi = 0.75m, HatchBrushStyle = HatchStyle.DashedVertical, HatcBrushColor = "DarkGray", PenColorCode = "DarkGray", PenThickness = 1 };
			Material material23 = new Material() { ID = 23, MaterialName = "Cam-Ortalama", IsiIletimKatsayisi = 0.80m, HatchBrushStyle = HatchStyle.LargeGrid, HatcBrushColor = "DarkBlue", PenColorCode = "DarkBlue", PenThickness = 1 };
			Material material24 = new Material() { ID = 24, MaterialName = "Döşeme-Karo-Mozaik-Fayans", IsiIletimKatsayisi = 0.90m, HatchBrushStyle = HatchStyle.LargeCheckerBoard, HatcBrushColor = "LightGray", PenColorCode = "LightGray", PenThickness = 1 };

			Material material25 = new Material() { ID = 25, MaterialName = "Döşeme-Grobeton veya Tesviye Betonu", IsiIletimKatsayisi = 1.10m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material26 = new Material() { ID = 26, MaterialName = "Döşeme Blokajı,Mozaik vs.", IsiIletimKatsayisi = 1.50m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material27 = new Material() { ID = 27, MaterialName = "Çimento Harç", IsiIletimKatsayisi = 1.20m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material28 = new Material() { ID = 28, MaterialName = "Beton-120", IsiIletimKatsayisi = 1.30m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material29 = new Material() { ID = 29, MaterialName = "Beton-160", IsiIletimKatsayisi = 1.75m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material30 = new Material() { ID = 30, MaterialName = "Ağır Tabi Tuşlar (Granit,Mermer vs.)", IsiIletimKatsayisi = 3.00m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material31 = new Material() { ID = 31, MaterialName = "Kurşun (Saf)", IsiIletimKatsayisi = 31.50m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material32 = new Material() { ID = 32, MaterialName = "Çelik (Ortalama)", IsiIletimKatsayisi = 39.0m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material33 = new Material() { ID = 33, MaterialName = "Demir (Sac,Profil vs.)", IsiIletimKatsayisi = 43.0m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material34 = new Material() { ID = 34, MaterialName = "Demir (%99.9 Saflıkta)", IsiIletimKatsayisi = 60.0m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material35 = new Material() { ID = 35, MaterialName = "Pirinç (%70 Bakır,%30 Çinko)", IsiIletimKatsayisi = 90.0m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material36 = new Material() { ID = 36, MaterialName = "Rabitz Teli", IsiIletimKatsayisi = 00.0m, HatchBrushStyle = HatchStyle.DiagonalBrick, HatcBrushColor = "Orange", PenColorCode = "Orange", PenThickness = 1 };
			Material material37 = new Material() { ID = 37, MaterialName = "Sıva", IsiIletimKatsayisi = 0.60m, HatchBrushStyle = HatchStyle.Percent05, HatcBrushColor = "Gray", PenColorCode = "Gray", PenThickness = 1 };



			materials.Add(material1);
			materials.Add(material2);
			materials.Add(material3);
			materials.Add(material4);
			materials.Add(material5);
			materials.Add(material6);
			materials.Add(material7);
			materials.Add(material8);
			materials.Add(material9);
			materials.Add(material10);
			materials.Add(material11);
			materials.Add(material12);
			materials.Add(material13);
			materials.Add(material14);
			materials.Add(material15);
			materials.Add(material16);
			materials.Add(material17);
			materials.Add(material18);
			materials.Add(material19);
			materials.Add(material20);
			materials.Add(material21);
			materials.Add(material22);
			materials.Add(material23);
			materials.Add(material24);
			materials.Add(material25);
			materials.Add(material26);
			materials.Add(material27);
			materials.Add(material28);
			materials.Add(material29);
			materials.Add(material30);
			materials.Add(material31);
			materials.Add(material32);
			materials.Add(material33);
			materials.Add(material34);
			materials.Add(material35);
			materials.Add(material36);
			materials.Add(material37);
			return materials;
		}
		public static List<HatchBrushTypes> CreateBrushes()
		{
			List<HatchBrushTypes> hatchBrushTypes = new List<HatchBrushTypes>();

			HatchBrushTypes BackwardDiagonal = new HatchBrushTypes() { ID = 1, DrawingHatchBrushType = HatchStyle.BackwardDiagonal };
			hatchBrushTypes.Add(BackwardDiagonal);
			HatchBrushTypes Cross = new HatchBrushTypes() { ID = 2, DrawingHatchBrushType = HatchStyle.Cross };
			hatchBrushTypes.Add(Cross);
			HatchBrushTypes DarkDownwardDiagonal = new HatchBrushTypes() { ID = 3, DrawingHatchBrushType = HatchStyle.DarkDownwardDiagonal };
			hatchBrushTypes.Add(DarkDownwardDiagonal);
			HatchBrushTypes DarkHorizontal = new HatchBrushTypes() { ID = 4, DrawingHatchBrushType = HatchStyle.DarkHorizontal };
			hatchBrushTypes.Add(DarkHorizontal);
			HatchBrushTypes DarkUpwardDiagonal = new HatchBrushTypes() { ID = 5, DrawingHatchBrushType = HatchStyle.DarkUpwardDiagonal };
			hatchBrushTypes.Add(DarkUpwardDiagonal);
			HatchBrushTypes DarkVertical = new HatchBrushTypes() { ID = 6, DrawingHatchBrushType = HatchStyle.DarkVertical };
			hatchBrushTypes.Add(DarkVertical);
			HatchBrushTypes DashedDownwardDiagonal = new HatchBrushTypes() { ID = 7, DrawingHatchBrushType = HatchStyle.DashedDownwardDiagonal };
			hatchBrushTypes.Add(DashedDownwardDiagonal);
			HatchBrushTypes DashedHorizontal = new HatchBrushTypes() { ID = 8, DrawingHatchBrushType = HatchStyle.DashedHorizontal };
			hatchBrushTypes.Add(DashedHorizontal);
			HatchBrushTypes DashedUpwardDiagonal = new HatchBrushTypes() { ID = 9, DrawingHatchBrushType = HatchStyle.DashedUpwardDiagonal };
			hatchBrushTypes.Add(DashedUpwardDiagonal);
			HatchBrushTypes DashedVertical = new HatchBrushTypes() { ID = 10, DrawingHatchBrushType = HatchStyle.DashedVertical };
			hatchBrushTypes.Add(DashedVertical);
			HatchBrushTypes DiagonalBrick = new HatchBrushTypes() { ID = 11, DrawingHatchBrushType = HatchStyle.DiagonalBrick };
			hatchBrushTypes.Add(DiagonalBrick);
			HatchBrushTypes DiagonalCross = new HatchBrushTypes() { ID = 12, DrawingHatchBrushType = HatchStyle.DiagonalCross };
			hatchBrushTypes.Add(DiagonalCross);
			HatchBrushTypes Divot = new HatchBrushTypes() { ID = 13, DrawingHatchBrushType = HatchStyle.Divot };
			hatchBrushTypes.Add(Divot);
			HatchBrushTypes DottedDiamond = new HatchBrushTypes() { ID = 14, DrawingHatchBrushType = HatchStyle.DottedDiamond };
			hatchBrushTypes.Add(DottedDiamond);
			HatchBrushTypes DottedGrid = new HatchBrushTypes() { ID = 15, DrawingHatchBrushType = HatchStyle.DottedGrid };
			hatchBrushTypes.Add(DottedGrid);
			HatchBrushTypes ForwardDiagonal = new HatchBrushTypes() { ID = 16, DrawingHatchBrushType = HatchStyle.ForwardDiagonal };
			hatchBrushTypes.Add(ForwardDiagonal);
			HatchBrushTypes HorizontalBrick = new HatchBrushTypes() { ID = 17, DrawingHatchBrushType = HatchStyle.HorizontalBrick };
			hatchBrushTypes.Add(HorizontalBrick);
			HatchBrushTypes LargeCheckerBoard = new HatchBrushTypes() { ID = 18, DrawingHatchBrushType = HatchStyle.LargeCheckerBoard };
			hatchBrushTypes.Add(LargeCheckerBoard);
			HatchBrushTypes LargeConfetti = new HatchBrushTypes() { ID = 19, DrawingHatchBrushType = HatchStyle.LargeConfetti };
			hatchBrushTypes.Add(LargeConfetti);
			HatchBrushTypes LargeGrid = new HatchBrushTypes() { ID = 20, DrawingHatchBrushType = HatchStyle.LargeGrid };
			hatchBrushTypes.Add(LargeGrid);
			HatchBrushTypes LightDownwardDiagonal = new HatchBrushTypes() { ID = 21, DrawingHatchBrushType = HatchStyle.LightDownwardDiagonal };
			hatchBrushTypes.Add(LightDownwardDiagonal);
			HatchBrushTypes LightHorizontal = new HatchBrushTypes() { ID = 22, DrawingHatchBrushType = HatchStyle.LightHorizontal };
			hatchBrushTypes.Add(LightHorizontal);
			HatchBrushTypes LightUpwardDiagonal = new HatchBrushTypes() { ID = 23, DrawingHatchBrushType = HatchStyle.LightUpwardDiagonal };
			hatchBrushTypes.Add(LightUpwardDiagonal);
			HatchBrushTypes LightVertical = new HatchBrushTypes() { ID = 24, DrawingHatchBrushType = HatchStyle.LightVertical };
			hatchBrushTypes.Add(LightVertical);
			HatchBrushTypes Max = new HatchBrushTypes() { ID = 25, DrawingHatchBrushType = HatchStyle.Max };
			hatchBrushTypes.Add(Max);
			HatchBrushTypes Min = new HatchBrushTypes() { ID = 26, DrawingHatchBrushType = HatchStyle.Min };
			hatchBrushTypes.Add(Min);
			HatchBrushTypes NarrowHorizontal = new HatchBrushTypes() { ID = 27, DrawingHatchBrushType = HatchStyle.NarrowHorizontal };
			hatchBrushTypes.Add(NarrowHorizontal);
			HatchBrushTypes NarrowVertical = new HatchBrushTypes() { ID = 28, DrawingHatchBrushType = HatchStyle.NarrowVertical };
			hatchBrushTypes.Add(NarrowVertical);
			HatchBrushTypes OutlinedDiamond = new HatchBrushTypes() { ID = 29, DrawingHatchBrushType = HatchStyle.OutlinedDiamond };
			hatchBrushTypes.Add(OutlinedDiamond);
			HatchBrushTypes Percent05 = new HatchBrushTypes() { ID = 30, DrawingHatchBrushType = HatchStyle.Percent05 };
			hatchBrushTypes.Add(Percent05);
			HatchBrushTypes Percent10 = new HatchBrushTypes() { ID = 31, DrawingHatchBrushType = HatchStyle.Percent10 };
			hatchBrushTypes.Add(Percent10);
			HatchBrushTypes Percent20 = new HatchBrushTypes() { ID = 32, DrawingHatchBrushType = HatchStyle.Percent20 };
			hatchBrushTypes.Add(Percent20);
			HatchBrushTypes Percent25 = new HatchBrushTypes() { ID = 33, DrawingHatchBrushType = HatchStyle.Percent25 };
			hatchBrushTypes.Add(Percent25);
			HatchBrushTypes Percent30 = new HatchBrushTypes() { ID = 34, DrawingHatchBrushType = HatchStyle.Percent30 };
			hatchBrushTypes.Add(Percent30);
			HatchBrushTypes Percent40 = new HatchBrushTypes() { ID = 35, DrawingHatchBrushType = HatchStyle.Percent40 };
			hatchBrushTypes.Add(Percent40);
			HatchBrushTypes Percent50 = new HatchBrushTypes() { ID = 36, DrawingHatchBrushType = HatchStyle.Percent50 };
			hatchBrushTypes.Add(Percent50);
			HatchBrushTypes Percent60 = new HatchBrushTypes() { ID = 37, DrawingHatchBrushType = HatchStyle.Percent60 };
			hatchBrushTypes.Add(Percent60);
			HatchBrushTypes Percent70 = new HatchBrushTypes() { ID = 38, DrawingHatchBrushType = HatchStyle.Percent70 };
			hatchBrushTypes.Add(Percent70);
			HatchBrushTypes Percent75 = new HatchBrushTypes() { ID = 39, DrawingHatchBrushType = HatchStyle.Percent75 };
			hatchBrushTypes.Add(Percent75);
			HatchBrushTypes Percent80 = new HatchBrushTypes() { ID = 40, DrawingHatchBrushType = HatchStyle.Percent80 };
			hatchBrushTypes.Add(Percent80);
			HatchBrushTypes Percent90 = new HatchBrushTypes() { ID = 41, DrawingHatchBrushType = HatchStyle.Percent90 };
			hatchBrushTypes.Add(Percent90);
			HatchBrushTypes Plaid = new HatchBrushTypes() { ID = 42, DrawingHatchBrushType = HatchStyle.Plaid };
			hatchBrushTypes.Add(Plaid);
			HatchBrushTypes Shingle = new HatchBrushTypes() { ID = 43, DrawingHatchBrushType = HatchStyle.Shingle };
			hatchBrushTypes.Add(Shingle);
			HatchBrushTypes SmallCheckerBoard = new HatchBrushTypes() { ID = 44, DrawingHatchBrushType = HatchStyle.SmallCheckerBoard };
			hatchBrushTypes.Add(SmallCheckerBoard);
			HatchBrushTypes SmallConfetti = new HatchBrushTypes() { ID = 45, DrawingHatchBrushType = HatchStyle.SmallConfetti };
			hatchBrushTypes.Add(SmallConfetti);
			HatchBrushTypes SmallGrid = new HatchBrushTypes() { ID = 46, DrawingHatchBrushType = HatchStyle.SmallGrid };
			hatchBrushTypes.Add(SmallGrid);
			HatchBrushTypes SolidDiamond = new HatchBrushTypes() { ID = 47, DrawingHatchBrushType = HatchStyle.SolidDiamond };
			hatchBrushTypes.Add(SolidDiamond);
			HatchBrushTypes Sphere = new HatchBrushTypes() { ID = 48, DrawingHatchBrushType = HatchStyle.Sphere };
			hatchBrushTypes.Add(Sphere);
			HatchBrushTypes Trellis = new HatchBrushTypes() { ID = 49, DrawingHatchBrushType = HatchStyle.Trellis };
			hatchBrushTypes.Add(Trellis);
			HatchBrushTypes Vertcal = new HatchBrushTypes() { ID = 50, DrawingHatchBrushType = HatchStyle.Vertical };
			hatchBrushTypes.Add(Vertcal);
			HatchBrushTypes Wave = new HatchBrushTypes() { ID = 51, DrawingHatchBrushType = HatchStyle.Wave };
			hatchBrushTypes.Add(Wave);
			HatchBrushTypes Weave = new HatchBrushTypes() { ID = 52, DrawingHatchBrushType = HatchStyle.Weave };
			hatchBrushTypes.Add(Weave);
			HatchBrushTypes WideDownwardDiagonal = new HatchBrushTypes() { ID = 53, DrawingHatchBrushType = HatchStyle.WideDownwardDiagonal };
			hatchBrushTypes.Add(WideDownwardDiagonal);
			HatchBrushTypes WideUpwardDiagonal = new HatchBrushTypes() { ID = 54, DrawingHatchBrushType = HatchStyle.WideUpwardDiagonal };
			hatchBrushTypes.Add(WideUpwardDiagonal);
			HatchBrushTypes Zigzag = new HatchBrushTypes() { ID = 55, DrawingHatchBrushType = HatchStyle.ZigZag };
			hatchBrushTypes.Add(Zigzag);

			return hatchBrushTypes;
		}
	}
}
